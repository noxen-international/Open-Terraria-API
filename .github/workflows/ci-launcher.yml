# This is a basic workflow to help you get started with Actions

name: "CI-Launcher"

# Controls when the workflow will run
on:
  # Triggers the workflow on push/pull events but only for the upcoming-nuget-release branch
  push:
    branches: [ upcoming-nuget-release ]
  pull_request:
    branches: [ upcoming-nuget-release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_win:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100' # SDK Version to use; x will use the latest version of the 3.1 channel

      - name: MonoMod dev build
        run: dotnet nuget add source https://pkgs.dev.azure.com/MonoMod/MonoMod/_packaging/DevBuilds%40Local/nuget/v3/index.json -n DevBuilds@Local

      - name: Build and publish windows
        run: |
            cd OTAPI.Client.Launcher
            dotnet publish -r win-x64 --framework net6.0 -p:PublishReadyToRun=true --self-contained true -c Release
            Compress-Archive bin/Release/net6.0/win-x64/publish ../otapi_launcher.zip

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: Windows Launcher
      #     path: OTAPI.Client.Launcher/bin/Release/net6.0/win-x64/publish

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "launcher-windows"
          prerelease: true
          title: "Windows Launcher"
          files: otapi_launcher.zip

  build_osx:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100' # SDK Version to use; x will use the latest version of the 3.1 channel

      - name: Build and publish macos
        run: |
            cd OTAPI.Client.Launcher
            dotnet publish -r osx.10.11-x64 --framework net6.0 -p:PublishReadyToRun=true --self-contained true -c Release
            mkdir OTAPI.app
            mkdir OTAPI.app/Contents
            mkdir OTAPI.app/Contents/Resources
            mv bin/Release/net6.0/osx.10.11-x64/publish OTAPI.app/Contents/MacOS
            cp ../docs/MacOS.Info.plist OTAPI.app/Contents/Info.plist
            zip -r ../OTAPI_MacOS.zip OTAPI.app

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: MacOS Launcher
      #     path: OTAPI.Client.Launcher/bin/Release/net6.0/osx.10.11-x64/publish

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "launcher-macos"
          prerelease: true
          title: "MacOS Launcher"
          files: OTAPI_MacOS.zip

  # This workflow contains a single job called "build"
  build_lin:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100' # SDK Version to use; x will use the latest version of the 3.1 channel

      - name: Build and publish linux
        run: |
            cd OTAPI.Client.Launcher
            dotnet publish -r ubuntu.16.04-x64 --framework net6.0 -p:PublishReadyToRun=true --self-contained true -c Release
            zip -r ../otapi_launcher.zip bin/Release/net6.0/ubuntu.16.04-x64/publish

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: Linux Launcher
      #     path: OTAPI.Client.Launcher/bin/Release/net6.0/ubuntu.16.04-x64/publish

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "launcher-linux"
          prerelease: true
          title: "Linux Launcher"
          files: otapi_launcher.zip
